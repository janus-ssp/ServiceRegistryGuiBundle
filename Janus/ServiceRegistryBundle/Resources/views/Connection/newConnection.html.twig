{% extends "JanusServiceRegistryBundle::layout.html.twig" %}

{% block title "Symfony - Connections" %}

{% block content_header '' %}

{% block content %}
    <h1 class="title">{{ 'connection.new.headline'|trans({}, 'JanusServiceRegistryBundle') }}</h1>

    {%  if (form is defined) %}
    <form action="{{ url('post_connection') }}" method="POST" {{ form_enctype(form) }}>

        {{ form_rest(form) }}

        <input type="submit" value="{% trans from 'JanusServiceRegistryBundle' %}connection.new.submit{% endtrans %}">
    </form>

<script src="https://serviceregistry.demo.openconext.org/simplesaml/module.php/janus/resources/components/jquery/jquery.min.js"></script>
<script>
    // @todo move to separate js
    var collectionHolder;


    jQuery(document).ready(function() {
        // Get the ul that holds the collection of collectionItems
        collectionHolder = $('div.field-collection');

        collectionHolder.each(function(index, collection) {
            collection = $(collection);

            // Add a button for each supported key
            var supportedKeys = new String(collection.data('supported-keys')).split(',');
            $.each(supportedKeys, function(index, supportedKey) {

                // setup an "add a collectionItem" link
                var addItemButton = $(
                    '<button class="add_collectionItem">Add ' + supportedKey + '</button>'
                );
                var newLinkLi = $('<div></div>').append(addItemButton);

                // add the "add a collectionItem" anchor and li to the collectionItems ul
                collection.append(newLinkLi);

                addItemButton.on('click', function(e) {
                    // Prevent button from submitting the form
                    e.preventDefault();

                    // @todo add delete button or turn this into a toggle button
                    // Disable button so item can only be added once
                    addItemButton.prop('disabled', true);

                    // add a new collectionItem form (see next code block)
                    addCollectionItemForm(collection, newLinkLi, supportedKey);
                });
            });
        });
    });

    function addCollectionItemForm(collectionHolder, newLinkLi, supportedKey) {
        // Get the data-prototype explained earlier
        var prototype = collectionHolder.data('prototype');

        var index = supportedKey;

        // Replace placeholders with index
        var newForm = prototype.
            replace(/__name__label__/g, index).
            replace(/__name__/g, index);

        // increase the index with one for the next item
        collectionHolder.data('index', index + 1);

        // Display the form in the page in an li, before the "Add a collectionItem" link li
        var newFormLi = $('<li></li>').append(newForm);
        newLinkLi.before(newFormLi);
    }
</script>

    {% endif %}

{% endblock %}